<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vZYKDBwAAAAASUVORK5CYII=
</value>
  </data>
</root>